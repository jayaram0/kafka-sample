version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_PORT: 9092
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFAK_LISTENERS: PLAINTEXT://:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
#      KAFKA_BROKER_ID: 1
      KAFKA_CREATE_TOPICS: "test-topic-1:1:1,test-topic-2:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


#  producer-1:
#    build:
#      context: ./producer/producer_1
#      dockerfile: ./Dockerfile
#    environment:
#      KAFKA_BROKER_URL: kafka:9092
#      KAFKA_TOPIC: test-topic-1
#    depends_on:
#      - kafka
#
#  producer-2:
#    build:
#      context: ./producer/producer_2
#      dockerfile: ./Dockerfile
#    environment:
#      KAFKA_BROKER_URL: kafka:9092
#      KAFKA_TOPIC: test-topic-2
#    depends_on:
#      - kafka
#
#  consumer-1:
#    build:
#      context: ./consumer/consumer_1
#      dockerfile: ./Dockerfile
#    environment:
#      KAFKA_BROKER_URL: kafka:9092
#      KAFKA_TOPIC: "test-topic-1,test-topic-2"
#      KAFKA_GROUP_ID: test-group
#      Kafka_AUTO_OFFSET_RESET: earliest
#    depends_on:
#      - kafka
#
#  consumer-2:
#    build:
#      context: ./consumer/consumer_2
#      dockerfile: ./Dockerfile
#    environment:
#      KAFKA_BROKER_URL: kafka:9092
#      KAFKA_TOPIC: "test-topic-1"
#      KAFKA_GROUP_ID: test-group
#      KAFKA_AUTO_OFFSET_RESET: earliest
#    depends_on:
#      - kafka
#
#  consumer-3:
#    build:
#      context: ./consumer/consumer_3
#      dockerfile: ./Dockerfile
#    environment:
#      KAFKA_BROKER_URL: kafka:9092
#      KAFKA_TOPIC: "test-topic-1,test-topic-2"
#      KAFKA_GROUP_ID: test-group-2
#      KAFKA_AUTO_OFFSET_RESET: earliest
#    depends_on:
#      - kafka